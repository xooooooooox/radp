<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.12</version>
    </parent>
    <groupId>space.x9x.radp</groupId>
    <artifactId>radp</artifactId>
    <version>0.1.3-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Rapid Application Development Platform</description>
    <url>https://github.com/xooooooooox/radp</url>

    <modules>
        <module>radp-agents</module>
        <module>radp-components</module>
        <module>radp-plugins</module>
        <module>radp-tests</module>
        <module>radp-archetypes</module>
    </modules>

    <properties>
        <!-- project info -->
        <scm.git.web_url>https://github.com/xooooooooox/radp.git</scm.git.web_url>
        <scm.git.url>git@github.com:xooooooooox/radp.git</scm.git.url>
        <scm.issue.url>https://github.com/xooooooooox/radp/issues</scm.issue.url>
        <developer.id>x9x</developer.id>
        <developer.name>xooooooooox</developer.name>
        <developer.email>xozozsos@gmail.com</developer.email>

        <!-- build -->
        <java.version>8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <flattened.filename>.flatten-pom-xml</flattened.filename>
        <javadoc.encoding>${project.build.sourceEncoding}</javadoc.encoding>
        <gpg.keyname>${setting.gpg.keyname}</gpg.keyname>
        <ossrh.server_id>ossrh</ossrh.server_id>

        <!-- plugin version -->
        <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
        <flatten-maven-plugin.version>1.5.0</flatten-maven-plugin.version>
        <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
        <versions-maven-plugin.version>2.14.2</versions-maven-plugin.version>
        <maven-wrapper-plugin.version>3.2.0</maven-wrapper-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
        <maven-checksum-plugin.version>1.10</maven-checksum-plugin.version>
        <maven-release-plugin.version>3.0.1</maven-release-plugin.version>
        <central-publishing-maven-plugin.version>0.6.0</central-publishing-maven-plugin.version>
    </properties>

    <developers>
        <developer>
            <id>${developer.id}</id>
            <name>${developer.name}</name>
            <email>${developer.email}</email>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <url>${scm.git.web_url}</url>
        <connection>scm:git:${scm.git.url}</connection>
        <developerConnection>scm:git:${scm.git.url}</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>${scm.issue.url}</url>
    </issueManagement>

    <licenses>
        <license>
            <name>GNU General Public License, Version 3</name>
            <url>https://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- 如果没有 Git 目录，不会导致构建失败 -->
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <!-- 如果无法提取仓库信息，不会导致构建失败 -->
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                        <!-- 生成 git.properties 文件 -->
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <!-- 仅包含指定的属性 -->
                        <includeOnlyProperties>
                            <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                            <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
                            <includeOnlyProperty>^git.branch$</includeOnlyProperty>
                            <includeOnlyProperty>^git.remote.origin.url$</includeOnlyProperty>
                        </includeOnlyProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <charset>${javadoc.encoding}</charset>
                        <docencoding>${javadoc.encoding}</docencoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <failOnError>false</failOnError>
                            </configuration>
                        </execution>
                        <!-- 聚合多模块项目的 java doc -->
                        <execution>
                            <id>aggregate</id>
                            <goals>
                                <goal>aggregate</goal>
                            </goals>
                            <configuration>
                                <!-- Specific configuration for the aggregate report -->
                                <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
                                <destDir>javadoc</destDir>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                            <configuration>
                                <!-- 启用 pinentry-mode loopback 模式需要满足以下条件 -->
                                <!-- 1. 确保 gpg version 2.1+ -->
                                <!-- 2. 确保 ~/.gnupg/gpg.conf 启用 allow-loopback-pinentry -->
                                <gpgArguments>
                                    <arg>--pinentry-mode</arg>
                                    <arg>loopback</arg>
                                </gpgArguments>
                                <useAgent>true</useAgent>
                                <keyname>${gpg.keyname}</keyname>
                                <passphraseServerId>${gpg.keyname}</passphraseServerId>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>net.nicoulaj.maven.plugins</groupId>
                    <artifactId>checksum-maven-plugin</artifactId>
                    <version>${maven-checksum-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>create-checksums</id>
                            <goals>
                                <goal>artifacts</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <allowReleasePluginSnapshot>true</allowReleasePluginSnapshot>
                        <!-- 如果为true, 那么 performRelease 将会为 true -->
                        <!-- 利用这个特性,可以将这个 performRelease 绑定到通过属性激活的 profile, 以补充 arguments 的不足 -->
                        <useReleaseProfile>false</useReleaseProfile>
                        <!-- 指定 release:perform 执行时传递的 maven config, 比如指定 -Pxx,yy -->
                        <arguments>${devops.release.arguments}</arguments>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-wrapper-plugin</artifactId>
                    <version>${maven-wrapper-plugin.version}</version>
                    <configuration>
                        <mavenVersion>3.9.9</mavenVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>

                <!-- 解决多模块 revision 版本替换问题 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenedPomFilename>${flattened.filename}</flattenedPomFilename>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    </configuration>
                    <executions>
                        <!-- enable flattening -->
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <!-- ensure proper cleanup -->
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- 发布到中央仓库 -->
        <!-- https://central.sonatype.com/ -->
        <!-- 该插件的存在无需指定 distributionManagement -->
        <profile>
            <id>publish-ossrh</id>
            <properties>
                <auto.release.enabled>true</auto.release.enabled>
                <devops.release.arguments>-Pcoding,publish-ossrh -DskipTests</devops.release.arguments>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                        <version>${central-publishing-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <publishingServerId>${ossrh.server_id}</publishingServerId>
                            <!-- 是否自动 publish, 默认为 false, 需要去页面手动点击 publish -->
                            <!--                            <autoPublish>true</autoPublish>-->
                            <!--                            <waitUntil>true</waitUntil>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- 为了加快构建速度 -->
            <!-- 对于 source jar, javadoc, asc, md5 这些构件信息 -->
            <!-- 只针对涉及发布到远程仓库时, 才激活, 比如 profile publish-* 激活时将自动激活 -->
            <id>auto-release</id>
            <activation>
                <property>
                    <name>auto.release.enabled</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <!-- 一定要先签名,再生成校验文件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>net.nicoulaj.maven.plugins</groupId>
                        <artifactId>checksum-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>