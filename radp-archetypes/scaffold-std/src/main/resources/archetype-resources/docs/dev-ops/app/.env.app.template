# NOTE: 复制这个 template 即可
# 如 cp .env.app.template -> .env.app
# 或 cp .env.app.template -> .env.app.xxx
# 然后直接修改其中的内容
# 最后通过 docker-compose --env-file .env --env-file .env.app.xxx -f docker-compose-xx.yaml up -d

IMAGE_NAMESPACE=xooooooooox
APP_NAME=${appName}
EXPOSE_SERVER_PORT=8888
EXPOSE_MANAGEMENT_SERVER_PORT=9999

SERVER_PORT=8888
MANAGEMENT_SERVER_PORT=9999

# NOTE: 如果希望覆盖 Spring Boot Application 配置
# 1) 方式一: 只需要使用大写的下划线环境变量即可
# 2) 方式二: 定义在 SPRING_APPLICATION_JSON={"":""}
# 3) 方式三: 在 volumes/app/${APP_NAME}/config/applicaiton-override.yaml 覆盖
# 比如, spring.datasource.url 可以使用 SPRING_DATASOURCE_URL 进行覆盖
SPRING_PROFILES_ACTIVE=dev,override

