<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>space.x9x.radp</groupId>
		<artifactId>radp-components</artifactId>
		<version>3.23.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<packaging>pom</packaging>
	<artifactId>radp-dependencies</artifactId>
	<name>${project.artifactId}</name>
	<description>统一依赖管理</description>

	<properties>
		<!-- [Spring] -->
		<spring-boot.version>3.4.5</spring-boot.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>

		<!-- [效率组件] -->
		<lombok.version>1.18.30</lombok.version>
		<mapstruct.version>1.6.2</mapstruct.version>
		<jetbrains-annotations.version>23.0.0</jetbrains-annotations.version>
		<arthas.version>3.6.7</arthas.version>
		<common-beanutils.version>1.9.4</common-beanutils.version>

		<!-- [接口文档组件] -->
		<knife4j.version>4.1.0</knife4j.version>
		<springdoc.version>2.8.6</springdoc.version>

		<!-- [关系型数据库] -->
		<mybatis.version>3.5.16</mybatis.version>
		<mybatis-spring.version>3.0.4</mybatis-spring.version>
		<mybatis-spring-boot.version>${mybatis-spring.version}</mybatis-spring-boot.version>
		<mybatis-plus.version>3.5.9</mybatis-plus.version>
		<mybatis-plus-join-boot-starter.version>1.5.2</mybatis-plus-join-boot-starter.version>
		<druid.version>1.2.16</druid.version>
		<pagehelper.version>5.3.1</pagehelper.version>

		<!-- [NoSQL] -->
		<mongobee.version>0.13</mongobee.version>
		<neo4j.version>2.0.6</neo4j.version>
		<influxdb.version>6.4.0</influxdb.version>

		<!-- [搜索引擎] -->
		<spring-boot-starter-data-elasticsearch.version>${spring-boot.version}
		</spring-boot-starter-data-elasticsearch.version>
		<t-digest.version>3.2</t-digest.version>
		<jopt-simple.version>5.0.4</jopt-simple.version>

		<!-- [缓存组件] -->
		<ehcache.version>2.10.4</ehcache.version>
		<redisson.version>3.32.0</redisson.version>
		<caffeine.version>2.9.3</caffeine.version>
		<hotkey.version>0.0.4-SNAPSHOT</hotkey.version>

		<!-- [消息队列] -->
		<rocketmq-spring-boot.version>2.3.1</rocketmq-spring-boot.version>
		<kafka.version>3.9.0</kafka.version>

		<!-- [分布式组件] -->
		<apache.dubbo.version>3.2.14</apache.dubbo.version>
		<protostuff.version>1.3.0</protostuff.version>
		<zookeeper.version>3.8.4</zookeeper.version>
		<xxl-job.version>2.4.0</xxl-job.version>

		<!-- [授权认证组件] -->
		<spring-security-jwt.version>1.1.1.RELEASE</spring-security-jwt.version>
		<jjwt.version>0.11.2</jjwt.version>
		<shiro.version>1.12.0</shiro.version>

		<!-- [云原生组件] -->
		<docker-java.version>3.2.14</docker-java.version>

		<!-- [通讯组件] -->
		<netty.version>4.1.105.Final
		</netty.version> <!-- 解决 DNS TCP fallback on UDP query timeout disabled. Upgrade Netty to 4.1.105 or higher. -->

		<!-- [监控组件] -->
		<!--        <micrometer.version>1.9.1</micrometer.version>-->

		<!-- TODO: [链路组件] -->

		<!-- [工具集] -->
		<spring-shell.version>2.1.13</spring-shell.version>
		<jasypt.version>3.0.5</jasypt.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<commons-io.version>2.17.0</commons-io.version>
		<hutool.version>5.8.25</hutool.version>
		<commons-httpclient.version>3.1</commons-httpclient.version>
		<retrofit2.version>2.9.0</retrofit2.version>
		<cglib.version>3.3.0</cglib.version>
		<guava.version>32.1.2-jre</guava.version>
		<dom4j.version>1.6.1</dom4j.version>
		<objenesis.version>3.3</objenesis.version>
		<jsr305.version>3.0.2</jsr305.version>
		<findbugs-annotations.version>3.0.1</findbugs-annotations.version>
		<fastjson.version>2.0.22</fastjson.version>
		<fastjson2.version>2.0.22</fastjson2.version>
		<transmittable-thread-local.version>2.13.2</transmittable-thread-local.version>

		<!-- [测试组件] -->
		<spock.version>2.3-groovy-4.0</spock.version>
		<cucumber.version>3.0.2</cucumber.version>
		<gatling.version>3.10.0</gatling.version>
		<groovy4.version>4.0.6</groovy4.version>
		<jmh.version>1.36</jmh.version>
		<testcontainers.version>1.21.0</testcontainers.version>
		<testcontainers-redis.version>2.2.2</testcontainers-redis.version>
		<embedded-redis.version>1.4.3</embedded-redis.version>
		<!-- ============================================================================== -->


		<!-- ============================================================================== -->
		<spring-boot-maven-plugin.version>${spring-boot.version}</spring-boot-maven-plugin.version>
		<maven-assembly-plugin.version>3.4.2</maven-assembly-plugin.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-war-plugin.version>3.3.2</maven-war-plugin.version>
		<maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>
		<!-- 安装到本地制品库-->
		<maven-install-plugin.version>3.1.0</maven-install-plugin.version>
		<!-- 部署到远程制品库 -->
		<maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
		<maven-checksum-plugin.version>1.10</maven-checksum-plugin.version>
		<maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
		<central-publishing-maven-plugin.version>0.7.0</central-publishing-maven-plugin.version>
		<!-- 发布版本 -->
		<maven-release-plugin.version>3.0.1</maven-release-plugin.version>
		<versions-maven-plugin.version>2.14.2</versions-maven-plugin.version>
		<!-- 代码覆盖率 -->
		<jacoco-maven-plugin.version>0.8.9</jacoco-maven-plugin.version>
		<!-- 代码质量 -->
		<sonar-maven-plugin.version>5.1.0.4751</sonar-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
		<!-- 单元测试 -->
		<junit-jupiter-engine.version>5.7.2</junit-jupiter-engine.version>
		<!-- 集成测试 -->
		<maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>
		<redis-maven-plugin.version>1.4.6</redis-maven-plugin.version>
		<!-- 性能测试 -->
		<gatling-maven-plugin.version>4.6.0</gatling-maven-plugin.version>
		<!-- 版本控制 -->
		<maven-scm-plugin.version>2.0.0-M3</maven-scm-plugin.version>
		<git-changelog-maven-plugin.version>1.95.2</git-changelog-maven-plugin.version>
		<!-- 项目脚手架 -->
		<archetype-packaging.version>3.2.0</archetype-packaging.version>
		<maven-archetype-plugin.version>3.3.1</maven-archetype-plugin.version>
		<!-- Docker 部署 -->
		<jib-maven-plugin.version>3.4.6</jib-maven-plugin.version>
		<dockerfile-maven-plugin.version>1.4.3</dockerfile-maven-plugin.version>
		<!-- J2EE 部署 -->
		<cargo-maven2-plugin.version>1.7.9</cargo-maven2-plugin.version>
		<!-- 数据库迁移工具 -->
		<liquibase.version>4.31.1</liquibase.version>
		<liquibase-maven-plugin.version>${liquibase.version}</liquibase-maven-plugin.version>
		<flyway-maven-plugin.version>${flyway.version}</flyway-maven-plugin.version>
		<!-- OpenAPI 生成工具 -->
		<openapi-generator-maven-plugin.version>5.2.1</openapi-generator-maven-plugin.version>
		<!-- OpenAPI 文档生成工具 -->
		<asciidoctor-maven-plugin.version>1.5.3</asciidoctor-maven-plugin.version>
		<asciidoctorj-diagram.version>1.5.18</asciidoctorj-diagram.version>
		<asciidoctorj-pdf.version>1.5.0-alpha.10.1</asciidoctorj-pdf.version>
		<swagger2markup-maven-plugin.version>1.3.7</swagger2markup-maven-plugin.version>
		<swagger2markup-extensions.version>1.3.3</swagger2markup-extensions.version>
		<!-- 属性解析工具 -->
		<os-maven-plugin.version>1.6.2</os-maven-plugin.version>
		<yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
		<properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>
		<!-- 其他编程语言 -->
		<gmavenplus-plugin.version>3.0.2</gmavenplus-plugin.version>
		<!-- 其它 -->
		<flatten-maven-plugin.version>1.5.0</flatten-maven-plugin.version>
		<maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
		<maven-wrapper-plugin.version>3.3.2</maven-wrapper-plugin.version>
		<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
		<xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
		<wagon-maven-plugin.version>2.0.2</wagon-maven-plugin.version>
		<maven-jxr-plugin.version>3.3.0</maven-jxr-plugin.version>
		<maven-site-plugin.version>3.12.1</maven-site-plugin.version>
		<maven-project-info-reports-plugin.version>3.6.2</maven-project-info-reports-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- ====================[radp==================== -->
			<!-- radp 基础组件 -->
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-commons</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-extensions</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-framework</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-test</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-boot-test</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-data</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-integration</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-security</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-boot</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-spring-cloud</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>

			<!-- 设计模式框架 -->
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-decision-tree-pattern</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>


			<!-- TODO: radp solutions -->

			<!-- radp-xx-spring-boot-starter -->
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-jasypt-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-logging-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-mybatis-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-springdoc-webmvc-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-springdoc-webflux-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-undertow-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-druid-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-hikaricp-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-redis-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>space.x9x.radp</groupId>
				<artifactId>radp-liquibase-spring-boot-starter</artifactId>
				<version>3.23.1-SNAPSHOT</version>
			</dependency>

			<!-- TODO: radp-xx-spring-cloud-starters -->

			<!-- ====================radp]==================== -->


			<!-- ====================[效率工具==================== -->
			<!-- MapStruct：用于简化 Java Bean 之间映射的工具 -->
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-processor</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<!-- JetBrains：提供常用的注解，如 @NotNull 等 -->
			<dependency>
				<groupId>org.jetbrains</groupId>
				<artifactId>annotations</artifactId>
				<version>${jetbrains-annotations.version}</version>
			</dependency>
			<!-- Arthas：阿里巴巴开源的 Java 诊断工具 -->
			<dependency>
				<groupId>com.taobao.arthas</groupId>
				<artifactId>arthas-spring-boot-starter</artifactId>
				<version>${arthas.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${common-beanutils.version}</version>
			</dependency>
			<!-- ====================效率工具]==================== -->

			<!-- ====================[接口文档组件==================== -->
			<!-- Knife4j OpenAPI3：增强版的 Swagger UI，用于 API 文档展示 -->
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<!-- SpringDoc OpenAPI UI：自动生成 OpenAPI 文档的工具 -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi</artifactId>
				<version>${springdoc.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ====================接口文档组件]==================== -->

			<!-- ====================[关系型数据库==================== -->
			<!-- MyBatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot.version}</version>
			</dependency>
			<!-- mybatis-plus -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-bom</artifactId>
				<version>${mybatis-plus.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- MyBatis-Plus Join：支持复杂关联查询的扩展 -->
			<dependency>
				<groupId>com.github.yulichang</groupId>
				<artifactId>mybatis-plus-join-boot-starter</artifactId>
				<version>${mybatis-plus-join-boot-starter.version}</version>
			</dependency>
			<!-- Druid -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!-- PageHelper：MyBatis 的分页插件 -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper</artifactId>
				<version>${pagehelper.version}</version>
			</dependency>
			<!-- ====================关系型数据库]==================== -->

			<!-- ====================[NoSQL==================== -->
			<!-- ====================NoSQL]==================== -->

			<!-- TODO: ====================[搜索引擎==================== -->
			<!-- TODO: ====================搜索引擎]==================== -->

			<!-- ====================[缓存==================== -->
			<!-- Redisson Spring Boot Starter：基于 Redis 的分布式 Java 库 -->
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson-spring-boot-starter</artifactId>
				<version>${redisson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson-spring-data-27</artifactId>
				<version>${redisson.version}</version>
			</dependency>
			<!-- ====================缓存]==================== -->

			<!-- ====================[消息队列==================== -->
			<!-- kafka -->
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring-kafka.version}</version>
			</dependency>
			<!-- rocketmq -->
			<dependency>
				<groupId>org.apache.rocketmq</groupId>
				<artifactId>rocketmq-spring-boot-starter</artifactId>
				<version>${rocketmq-spring-boot.version}</version>
			</dependency>
			<!-- ====================消息队列]==================== -->


			<!-- ====================[分布式组件==================== -->
			<!-- Apache Dubbo -->
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo</artifactId>
				<version>${apache.dubbo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-spring-boot-starter</artifactId>
				<version>${apache.dubbo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-dependencies-zookeeper</artifactId>
				<version>${apache.dubbo.version}</version>
				<type>pom</type>
				<scope>import</scope>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-reload4j
						</artifactId> <!-- fix error 'SLF4J: Class path contains multiple SLF4J bindings' -->
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j
						</artifactId> <!-- fix appender error -->
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Dubbo For Nacos -->
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-registry-nacos</artifactId>
				<version>${apache.dubbo.version}</version>
			</dependency>
			<!-- Protostuff -->
			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-core</artifactId>
				<version>${protostuff.version}</version>
			</dependency>
			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-runtime</artifactId>
				<version>${protostuff.version}</version>
			</dependency>
			<!-- Zookeeper -->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
			</dependency>
			<!-- xxl-job -->
			<dependency>
				<groupId>com.xuxueli</groupId>
				<artifactId>xxl-job-core</artifactId>
				<version>${xxl-job.version}</version>
			</dependency>
			<!-- ====================分布式组件]==================== -->

			<!-- ====================[授权认证组件==================== -->
			<!-- shiro -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<!-- JJwt -->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-api</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-impl</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-jackson</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-jwt</artifactId>
				<version>${spring-security-jwt.version}</version>
			</dependency>
			<!-- ====================授权认证组件]==================== -->

			<!-- TODO: ====================[监控==================== -->
			<!-- TODO: ====================监控]==================== -->

			<!-- TODO: ====================[链路组件==================== -->
			<!-- TODO: ====================链路组件]==================== -->

			<!-- ====================[工具集==================== -->
			<!-- Spring Shell Starter：用于构建交互式命令行应用的工具 -->
			<dependency>
				<groupId>org.springframework.shell</groupId>
				<artifactId>spring-shell-starter</artifactId>
				<version>${spring-shell.version}</version>
			</dependency>
			<!-- Jasypt Spring Boot Starter：提供加密支持的工具 -->
			<dependency>
				<groupId>com.github.ulisesbocchio</groupId>
				<artifactId>jasypt-spring-boot-starter</artifactId>
				<version>${jasypt.version}</version>
			</dependency>
			<!-- Commons Collections 4: 提供扩展的集合类和实用方法 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<!-- Apache Commons IO：提供文件和流的通用工具类 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<!-- Hutool：Java 工具库，提供丰富的工具类 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- Apache Commons HttpClient：HTTP 客户端工具类 -->
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
			</dependency>
			<!-- Retrofit2：类型安全的 HTTP 客户端 -->
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>retrofit</artifactId>
				<version>${retrofit2.version}</version>
			</dependency>
			<!-- Retrofit2 Jackson 转换器：用于 JSON 解析 -->
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>converter-jackson</artifactId>
				<version>${retrofit2.version}</version>
			</dependency>
			<!-- Retrofit2 RxJava2 适配器：支持响应式编程 -->
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>adapter-rxjava2</artifactId>
				<version>${retrofit2.version}</version>
			</dependency>
			<!-- CGLIB：代码生成库，常用于动态代理 -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<!-- Guava：Google 的核心库，包括集合、缓存、原生类型支持等 -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<!-- dom4j：一个简洁的、易用的、可靠的、高效的XML处理框架 -->
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
			</dependency>
			<!-- Objenesis：一个用于实例化对象的库，无需使用构造函数 -->
			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>${objenesis.version}</version>
			</dependency>
			<!-- JSR305：一个包含用于类型安全注解的库，用于改善编译时和运行时的类型检查 -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
			</dependency>
			<!-- FindBugs Annotations：提供FindBugs的注解，如SuppressFBWarnings等 -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>${findbugs-annotations.version}</version>
			</dependency>
			<!-- Fastjson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- Fastjson2 -->
			<dependency>
				<groupId>com.alibaba.fastjson2</groupId>
				<artifactId>fastjson2</artifactId>
				<version>${fastjson2.version}</version>
			</dependency>
			<!-- Alibaba TransmittableThreadLocal -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>transmittable-thread-local</artifactId>
				<version>${transmittable-thread-local.version}</version>
			</dependency>
			<!-- ====================工具集]==================== -->

			<!-- ====================[测试组件==================== -->
			<!-- Spock测试框架依赖(java,groovy) -->
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-bom</artifactId>
				<version>${spock.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Cucumber测试框架依赖 -->
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-spring</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<!-- Gatling性能测试工具依赖 -->
			<dependency>
				<groupId>io.gatling.highcharts</groupId>
				<artifactId>gatling-charts-highcharts</artifactId>
				<version>${gatling.version}</version>
			</dependency>
			<!-- Groovy脚本语言依赖 -->
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>${groovy4.version}</version>
			</dependency>
			<!-- JMH基准测试依赖 -->
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-core</artifactId>
				<version>${jmh.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-generator-annprocess</artifactId>
				<version>${jmh.version}</version>
			</dependency>
			<!-- Embedded Redis -->
			<dependency>
				<groupId>com.github.codemonstur</groupId>
				<artifactId>embedded-redis</artifactId>
				<version>${embedded-redis.version}</version>
			</dependency>
			<!-- Testcontainers -->
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.redis</groupId>
				<artifactId>testcontainers-redis</artifactId>
				<version>${testcontainers-redis.version}</version>
			</dependency>
			<!-- ====================测试组件]==================== -->


			<!-- ====================[Spring==================== -->
			<!-- Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Cloud -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ====================Spring]==================== -->
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<!-- 相同的 phase 按引入顺序执行 -->
			<plugins>
				<!-- ====================[清理==================== -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<!-- ====================清理]==================== -->

				<!-- ====================[编译==================== -->
				<!-- maven-compiler-plugin 插件，解决 spring-boot-configuration-processor + Lombok + MapStruct 组合 -->
				<!-- https://stackoverflow.com/questions/33483697/re-run-spring-boot-configuration-annotation-processor-to-update-generated-metada -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<!-- ====================编译]==================== -->

				<!-- ====================[资源管理==================== -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<!-- ====================资源管理]==================== -->

				<!-- ====================[打包成可执行程序==================== -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<!-- ====================打包成可执行程序]==================== -->

				<!-- ====================[部署仓库==================== -->
				<!-- 部署到本地制品库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<!-- 部署到远程制品库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<!-- 部署到中央仓库 -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>net.nicoulaj.maven.plugins</groupId>
					<artifactId>checksum-maven-plugin</artifactId>
					<version>${maven-checksum-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.central</groupId>
					<artifactId>central-publishing-maven-plugin</artifactId>
					<version>${central-publishing-maven-plugin.version}</version>
				</plugin>
				<!-- 部署到镜像仓库 docker -->
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<version>${jib-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
				</plugin>
				<!-- 部署到 J2EE 容器 -->
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo-maven2-plugin.version}</version>
				</plugin>
				<!-- ====================部署仓库]==================== -->

				<!-- ====================[发布版本==================== -->
				<!-- 该插件需要结合 scm 使用 -->
				<!-- 1. mvn release:prepare -B -->
				<!-- 0) 这里的 -B 表示 batch mode, 无交互式运行 -->
				<!-- 1) 检查是否有未提交的代码 -->
				<!-- 2) 修改 pom.xml 版本号快照版本为正式版本, 并提交 commit 修改后的代码, 并对修改后的代码打 tag -->
				<!-- 3) 更新版本为下一个快照版本, 并提交代码 -->
				<!-- 2. mvn release:perform -B -->
				<!-- 检出打好标签的最新正式版本, 并执行构建与部署 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
				<!-- ====================发布版本]==================== -->

				<!-- ====================[代码覆盖率==================== -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>
				<!-- ====================代码覆盖率]==================== -->

				<!-- ====================[代码质量==================== -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
				</plugin>
				<!-- ====================代码质量]==================== -->

				<!-- ====================[单元测试==================== -->
				<!-- maven-surefire-plugin 插件，用于运行单元测试。 -->
				<!-- 注意，需要使用 3.0.X+，因为要支持 Junit 5 版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven-jxr-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
				</plugin>
				<!-- ====================单元测试]==================== -->

				<!-- ====================[集成测试==================== -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>ru.trylogic.maven.plugins</groupId>
					<artifactId>redis-maven-plugin</artifactId>
					<version>${redis-maven-plugin.version}</version>
				</plugin>
				<!-- ====================集成测试]==================== -->

				<!-- ====================[性能测试==================== -->
				<plugin>
					<groupId>io.gatling</groupId>
					<artifactId>gatling-maven-plugin</artifactId>
					<version>${gatling-maven-plugin.version}</version>
				</plugin>
				<!-- ====================性能测试]==================== -->

				<!-- ====================[版本控制==================== -->
				<!-- 版本管理 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${maven-scm-plugin.version}</version>
				</plugin>
				<!-- 版本提交信息 -->
				<plugin>
					<groupId>io.github.git-commit-id</groupId>
					<artifactId>git-commit-id-maven-plugin</artifactId>
					<version>${git-commit-id-maven-plugin.version}</version>
				</plugin>
				<!-- 版本变更记录 -->
				<plugin>
					<groupId>se.bjurr.gitchangelog</groupId>
					<artifactId>git-changelog-maven-plugin</artifactId>
					<version>${git-changelog-maven-plugin.version}</version>
				</plugin>
				<!-- ====================版本控制]==================== -->

				<!-- ====================[项目脚手架==================== -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>${maven-archetype-plugin.version}</version>
				</plugin>
				<!-- ====================项目脚手架]==================== -->

				<!-- ====================[数据库迁移工具==================== -->
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>${flyway-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>${liquibase-maven-plugin.version}</version>
				</plugin>
				<!-- ====================数据库迁移工具]==================== -->

				<!-- ====================[OpenAPI 生成工具==================== -->
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${openapi-generator-maven-plugin.version}</version>
				</plugin>
				<!-- ====================OpenAPI 生成工具]==================== -->

				<!-- ====================[属性解析工具==================== -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${properties-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>it.ozimov</groupId>
					<artifactId>yaml-properties-maven-plugin</artifactId>
					<version>${yaml-properties-maven-plugin.version}</version>
				</plugin>
				<!-- ====================属性解析工具]==================== -->

				<!-- ====================[其他编程语言==================== -->
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>${gmavenplus-plugin.version}</version>
				</plugin>
				<!-- ====================其他编程语言]==================== -->

				<!-- ====================[其它==================== -->
				<!-- 解决多模块 revision 版本替换问题 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-wrapper-plugin</artifactId>
					<version>${maven-wrapper-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>${wagon-maven-plugin.version}</version>
				</plugin>
				<!-- ====================其它]==================== -->
			</plugins>
		</pluginManagement>
	</build>
</project>
