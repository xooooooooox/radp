<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>space.x9x.radp</groupId>
        <artifactId>radp-components</artifactId>
        <version>0.5</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <packaging>pom</packaging>
    <artifactId>radp-dependencies</artifactId>
    <name>${project.artifactId}</name>
    <description>统一依赖管理</description>

    <properties>
        <!-- 基础框架 -->
        <cola.version>4.1.0</cola.version>
        <spring-boot.version>2.7.12</spring-boot.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>

        <!-- 效率组件 -->
        <lombok.version>1.18.30</lombok.version>
        <mapstruct.version>1.6.2</mapstruct.version>
        <jetbrains-annotations.version>23.0.0</jetbrains-annotations.version>
        <arthas.version>3.6.7</arthas.version>
        <common-beanutils.version>1.9.4</common-beanutils.version>

        <!-- Web 组件 -->
        <knife4j.version>4.1.0</knife4j.version>
        <springdoc.version>1.6.15</springdoc.version>

        <!-- 工具集 -->
        <spring-shell.version>2.1.13</spring-shell.version>
        <jasypt.version>3.0.5</jasypt.version>
        <commons-io.version>2.7</commons-io.version>
        <hutool.version>5.8.25</hutool.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <retrofit2.version>2.9.0</retrofit2.version>
        <cglib.version>3.3.0</cglib.version>
        <guava.version>32.1.2-jre</guava.version>
        <dom4j.version>1.6.1</dom4j.version>
        <objenesis.version>3.3</objenesis.version>
        <jsr305.version>3.0.2</jsr305.version>
        <fastjson.version>2.0.22</fastjson.version>
        <fastjson2.version>2.0.22</fastjson2.version>
        <transmittable-thread-local.version>2.13.2</transmittable-thread-local.version>

        <!-- 关系型数据库 -->
        <mybatis.version>3.5.16</mybatis.version>
        <mybatis-spring.version>2.1.2</mybatis-spring.version>
        <mybatis-spring-boot.version>2.1.4</mybatis-spring-boot.version>
        <mybatis-plus.version>3.5.7</mybatis-plus.version>
        <mybatis-plus-generator.version>3.5.7</mybatis-plus-generator.version>
        <mybatis-plus-join-boot-starter.version>1.5.2
        </mybatis-plus-join-boot-starter.version>
        <druid.version>1.2.16</druid.version>
        <pagehelper.version>5.3.1</pagehelper.version>

        <!-- NoSQL 数据库 -->
        <mongodb.version>3.12.11</mongodb.version>
        <mongobee.version>0.13</mongobee.version>
        <neo4j.version>2.0.6</neo4j.version>
        <influxdb.version>6.4.0</influxdb.version>

        <!-- 搜索引擎 -->
        <spring-boot-starter-data-elasticsearch.version>${spring-boot.version}
        </spring-boot-starter-data-elasticsearch.version>
        <t-digest.version>3.2</t-digest.version>
        <jopt-simple.version>5.0.4</jopt-simple.version>

        <!-- 缓存组件 -->
        <ehcache.version>2.10.4</ehcache.version>
        <redisson.version>3.32.0</redisson.version>
        <caffeine.version>2.9.3</caffeine.version>
        <hotkey.version>0.0.4-SNAPSHOT</hotkey.version>

        <!-- 消息队列 -->
        <rocketmq-spring-boot.version>2.3.1</rocketmq-spring-boot.version>

        <!-- 分布式组件 -->
        <apache.dubbo.version>3.2.14</apache.dubbo.version>
        <protostuff.version>1.3.0</protostuff.version>
        <zookeeper.version>3.8.4</zookeeper.version>
        <xxl-job.version>2.4.0</xxl-job.version>

        <!-- 微服务组件 -->

        <!-- 授权认证组件 -->
        <spring-security-jwt.version>1.1.1.RELEASE</spring-security-jwt.version>
        <jjwt.version>0.11.2</jjwt.version>
        <shiro.version>1.12.0</shiro.version>

        <!-- 通讯组件 -->
        <netty.version>4.1.105.Final
        </netty.version> <!-- 解决 DNS TCP fallback on UDP query timeout disabled. Upgrade Netty to 4.1.105 or higher. -->

        <!-- 日志组件 -->

        <!-- 监控组件 -->
        <!--        <micrometer.version>1.9.1</micrometer.version>-->

        <!-- 链路组件 -->

        <!-- 测试组件 -->
        <spock.version>2.3-groovy-4.0</spock.version>
        <cucumber.version>3.0.2</cucumber.version>
        <gatling.version>3.2.1</gatling.version>
        <groovy4.version>4.0.6</groovy4.version>
        <jmh.version>1.36</jmh.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <embedded-redis.version>0.11.0</embedded-redis.version>

        <!-- 云原生组件 -->
        <docker-java.version>3.2.14</docker-java.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- ===========================
                     Spring Framework BOMs
                ============================ -->
            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- ===========================
                     基础组件 (RADP Base Components)
                ============================ -->
            <!-- radp 基础组件 -->
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-commons</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-extensions</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-framework</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-test</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-boot-test</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-data</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-integration</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-security</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-boot</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-spring-cloud</artifactId>
                <version>0.5</version>
            </dependency>


            <!-- ===========================
                 解决方案 (Solutions)
            ============================ -->
            <!-- TODO -->

            <!-- ===========================
                 自定义 Spring Boot Starters
            ============================ -->
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-tomcat-spring-boot-tarter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-jasypt-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-logging-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-mybatis-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-swagger3-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-undertow-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-druid-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-hikaricp-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-redis-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>space.x9x.radp</groupId>
                <artifactId>radp-liquibase-spring-boot-starter</artifactId>
                <version>0.5</version>
            </dependency>

            <!-- ===========================
                 自定义 Spring Cloud Starters
            ============================ -->
            <!-- TODO -->


            <!-- ===========================
                 效率工具
            ============================ -->
            <!-- MapStruct：用于简化 Java Bean 之间映射的工具 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!-- JetBrains 注解：提供常用的注解，如 @NotNull 等 -->
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${jetbrains-annotations.version}</version>
            </dependency>
            <!-- Arthas：阿里巴巴开源的 Java 诊断工具 -->
            <dependency>
                <groupId>com.taobao.arthas</groupId>
                <artifactId>arthas-spring-boot-starter</artifactId>
                <version>${arthas.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${common-beanutils.version}</version>
            </dependency>

            <!-- ===========================
                         Web 开发相关
                 ============================ -->
            <!-- Knife4j OpenAPI3：增强版的 Swagger UI，用于 API 文档展示 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!-- SpringDoc OpenAPI UI：自动生成 OpenAPI 文档的工具 -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- ===========================
                     关系型数据库
                ============================ -->
            <!-- MyBatis -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>
            <!-- MyBatis-Plus Boot Starter：MyBatis-Plus 的 Spring Boot 启动器 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- MyBatis-Plus 核心库 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- MyBatis-Plus Join：支持复杂关联查询的扩展 -->
            <dependency>
                <groupId>com.github.yulichang</groupId>
                <artifactId>mybatis-plus-join-boot-starter</artifactId>
                <version>${mybatis-plus-join-boot-starter.version}</version>
            </dependency>
            <!-- Druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- Druid Spring Boot Starter：阿里巴巴的数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- PageHelper：MyBatis 的分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <!-- ===========================
                     NoSQL
                ============================ -->
            <!-- MongoDB -->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver</artifactId>
                <version>${mongodb.version}</version>
            </dependency>

            <!-- ===========================
                     搜索引擎
                 ============================ -->
            <!-- TODO -->

            <!-- ===========================
                     缓存
                 ============================ -->
            <!-- Redisson Spring Boot Starter：基于 Redis 的分布式 Java 库 -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-data-27</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <!-- ===========================
                缓存
            ============================ -->
            <!-- kafka -->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <!-- rocketmq -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq-spring-boot.version}</version>
            </dependency>


            <!-- ===========================
                     分布式组件
                 ============================ -->
            <!-- Apache Dubbo -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${apache.dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${apache.dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-dependencies-zookeeper</artifactId>
                <version>${apache.dubbo.version}</version>
                <type>pom</type>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-reload4j
                        </artifactId> <!-- fix error 'SLF4J: Class path contains multiple SLF4J bindings' -->
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j
                        </artifactId> <!-- fix appender error -->
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Dubbo For Nacos -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-registry-nacos</artifactId>
                <version>${apache.dubbo.version}</version>
            </dependency>
            <!-- Protostuff -->
            <dependency>
                <groupId>com.dyuproject.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>com.dyuproject.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <!-- Zookeeper -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <!-- xxl-job -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job.version}</version>
            </dependency>

            <!-- ===========================
                     授权认证
                 ============================ -->
            <!-- shiro -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <!-- JJwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>${spring-security-jwt.version}</version>
            </dependency>

            <!-- ===========================
                    监控
                 ============================ -->
            <!-- TODO -->


            <!-- ===========================
                     工具集
                 ============================ -->
            <!-- Spring Shell Starter：用于构建交互式命令行应用的工具 -->
            <dependency>
                <groupId>org.springframework.shell</groupId>
                <artifactId>spring-shell-starter</artifactId>
                <version>${spring-shell.version}</version>
            </dependency>
            <!-- Jasypt Spring Boot Starter：提供加密支持的工具 -->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
            </dependency>
            <!-- Apache Commons IO：提供文件和流的通用工具类 -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <!-- Hutool：Java 工具库，提供丰富的工具类 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- Apache Commons HttpClient：HTTP 客户端工具类 -->
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>${commons-httpclient.version}</version>
            </dependency>
            <!-- Retrofit2：类型安全的 HTTP 客户端 -->
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit2.version}</version>
            </dependency>
            <!-- Retrofit2 Jackson 转换器：用于 JSON 解析 -->
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>${retrofit2.version}</version>
            </dependency>
            <!-- Retrofit2 RxJava2 适配器：支持响应式编程 -->
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>adapter-rxjava2</artifactId>
                <version>${retrofit2.version}</version>
            </dependency>
            <!-- CGLIB：代码生成库，常用于动态代理 -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <!-- Guava：Google 的核心库，包括集合、缓存、原生类型支持等 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- dom4j：一个简洁的、易用的、可靠的、高效的XML处理框架 -->
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>
            <!-- Objenesis：一个用于实例化对象的库，无需使用构造函数 -->
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${objenesis.version}</version>
            </dependency>
            <!-- JSR305：一个包含用于类型安全注解的库，用于改善编译时和运行时的类型检查 -->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>
            <!-- Fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- Fastjson2 -->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>
            <!-- Alibaba TransmittableThreadLocal -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable-thread-local.version}</version>
            </dependency>

            <!-- ===========================
                     测试组件
                 ============================ -->
            <!-- Spock测试框架依赖(java,groovy) -->
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-bom</artifactId>
                <version>${spock.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Cucumber测试框架依赖 -->
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-spring</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <!-- Gatling性能测试工具依赖 -->
            <dependency>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-app</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-recorder</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gatling.highcharts</groupId>
                <artifactId>gatling-charts-highcharts</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            <!-- Groovy脚本语言依赖 -->
            <dependency>
                <groupId>org.apache.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy4.version}</version>
            </dependency>
            <!-- JMH基准测试依赖 -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <!-- Testcontainers -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Embedded Redis -->
            <dependency>
                <groupId>com.github.codemonstur</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>${embedded-redis.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>