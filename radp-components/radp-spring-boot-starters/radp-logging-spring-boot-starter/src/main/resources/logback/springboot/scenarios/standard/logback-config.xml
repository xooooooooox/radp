<?xml version="1.0" encoding="UTF-8"?>
<!--
标准应用场景的日志配置
适用于常规的Spring Boot应用，提供完整的日志功能。

特点：
1. 使用Spring Boot的日志扩展（如%clr和%wEx转换模式）
2. 提供彩色控制台输出
3. 支持文件日志输出和滚动策略
4. 支持按日志级别分类存储
-->

<included>
    <include resource="logback/springboot/components/console.xml"/>
    <include resource="logback/springboot/components/file.xml"/>

    <!-- 根据 logging.pattern.console 属性的值决定控制台日志输出 -->
    <!-- 1) logging.pattern.console 定义了值: 则使用定义的格式输出到控制台 -->
    <!-- 2) logging.pattern.console 为空字符串: 不输出控制台日志 -->
    <!-- 3) logging.pattern.console 未定义: 使用默认的控制台日志格式 -->
    <if condition='isDefined("userConsoleLogPattern")'>
        <then>
            <!-- 1) logging.pattern.console 定义了值: 则使用定义的格式输出到控制台 -->
            <if condition='!property("userConsoleLogPattern").isEmpty()'>
                <then>
                    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

                    <root level="${logging.level.root:-info}">
                        <appender-ref ref="CONSOLE"/>
                    </root>
                </then>
                <!-- 2) logging.pattern.console 为空字符串: 不输出控制台日志 -->
            </if>
        </then>
        <!-- 3) logging.pattern.console 未定义: 使用 xml 中定义的默认值 radpConsoleLogPattern -->
        <else>
            <!-- 使用 radpConsoleLogPattern 覆盖SpringBoot默认的控制台格式 -->
            <property name="CONSOLE_LOG_PATTERN" value="${radpConsoleLogPattern}"/>
            <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>
            <root level="${logging.level.root:-info}">
                <appender-ref ref="CONSOLE"/>
            </root>
        </else>
    </if>
    <root level="${logging.level.root:-info}">
        <appender-ref ref="radp_console_appender"/>
        <appender-ref ref="radp_file_appender_async"/>
    </root>
    <springProfile name="local">
        <root level="${logging.level.root:-info}">
            <appender-ref ref="radp_file_appender_async"/>
            <appender-ref ref="radp_file_appender_filter_debug_async"/>
            <appender-ref ref="radp_file_appender_filter_info_async"/>
            <appender-ref ref="radp_file_appender_filter_warn_async"/>
            <appender-ref ref="radp_file_appender_filter_error_async"/>
        </root>
    </springProfile>
    <!-- 其它环境 -->
    <springProfile name="dev,test,sit,uat,prod">
        <root level="${logging.level.root:-info}">
            <appender-ref ref="radp_file_appender_async"/>
            <appender-ref ref="radp_file_appender_filter_debug_async"/>
            <appender-ref ref="radp_file_appender_filter_info_async"/>
            <appender-ref ref="radp_file_appender_filter_warn_async"/>
            <appender-ref ref="radp_file_appender_filter_error_async"/>
        </root>
    </springProfile>

</included>
