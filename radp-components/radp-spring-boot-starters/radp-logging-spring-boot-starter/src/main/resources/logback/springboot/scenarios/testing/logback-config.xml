<?xml version="1.0" encoding="UTF-8"?>
<!--
测试环境场景的日志配置
适用于单元测试和集成测试，配置更加简洁，主要关注控制台输出的可读性。

特点：
1. 使用Spring Boot的日志扩展（如%clr和%wEx转换模式）
2. 提供彩色控制台输出
3. 简化的文件日志配置
4. 更高的默认日志级别（便于调试）
-->

<included>
    <include resource="logback/springboot/components/console.xml"/>
    <include resource="logback/springboot/components/file.xml"/>

    <!-- 由于单元测试或 以及 @SpringBootTest 集成测试中部分日志无法被 logback-spring.xml 控制 -->
    <if condition='isDefined("userConsoleLogPattern")'>
        <then>
            <!-- 1) logging.pattern.console 定义了值: 则使用定义的格式输出到控制台 -->
            <if condition='!property("userConsoleLogPattern").isEmpty()'>
                <then>
                    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

                    <root level="${logging.level.root:-info}">
                        <appender-ref ref="CONSOLE"/>
                    </root>
                </then>
                <!-- 2) logging.pattern.console 为空字符串: 不输出控制台日志 -->
            </if>
        </then>
        <!-- 3) logging.pattern.console 未定义: 使用 xml 中定义的默认值 radpConsoleLogPattern -->
        <else>
            <!-- 使用 radpConsoleLogPattern 覆盖SpringBoot默认的控制台格式 -->
            <property name="CONSOLE_LOG_PATTERN" value="${radpConsoleLogPattern}"/>
            <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>
            <root level="${logging.level.root:-info}">
                <appender-ref ref="CONSOLE"/>
            </root>
        </else>
    </if>
    <root level="${logging.level.root:-info}">
        <appender-ref ref="radp_console_appender"/>
        <appender-ref ref="radp_file_appender_async"/>
    </root>
</included>
